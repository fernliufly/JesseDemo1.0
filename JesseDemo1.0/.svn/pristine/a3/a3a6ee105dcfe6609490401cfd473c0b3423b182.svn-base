<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:tx="http://www.springframework.org/schema/tx" 
xmlns:aop="http://www.springframework.org/schema/aop" 
xmlns:context="http://www.springframework.org/schema/context" 
xsi:schemaLocation="
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.3.xsd
">

	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:config/config.properties, classpath:config/redis.properties" />

	<!-- 自动扫描dao和service包(自动注入) -->
	<context:component-scan base-package="com.zmt.dao,com.zmt.service,com.wu.common.cache.redis*" />

  <!-- 	<bean id="redisInfo" class="com.wu.common.cache.redis.RedisConfig">
		<property name="host" value="${cache.redis.host}" />
		<property name="port" value="${cache.redis.port}" />
		<property name="password" value="${cache.redis.password}" />
		<property name="maxIdle" value="${cache.redis.maxIdle}" />
		<property name="maxTotal" value="${cache.redis.maxTotal}" />
		<property name="minIdle" value="${cache.redis.minIdle}" />
		<property name="testOnBorrow" value="${cache.redis.testOnBorrow}" />
		<property name="usePool" value="${cache.redis.usePool}" />
		<property name="timeout" value="${cache.redis.timeout}" />
		<property name="testOnReturn" value="${cache.redis.testOnReturn}" />
		<property name="testWhileIdle" value="${cache.redis.testWhileIdle}" />
		<property name="maxActive" value="${cache.redis.maxActive}" />
		<property name="maxWait" value="${cache.redis.maxWait}" />
		<property name="numTestsPerEvictionRun" value="${cache.redis.numTestsPerEvictionRun}" />
		<property name="timeBetweenEvictionRunsMillis" value="${cache.redis.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${cache.redis.minEvictableIdleTimeMillis}" />
	</bean> 
	
	<bean id="redisCacher" class="com.wu.common.cache.redis.RedisCacher">
		<property name="redisConfig" ref="redisInfo" />
	</bean>
	-->
	<!-- 1. 数据源 : DriverManagerDataSource -->  
    <bean id="dataSource"  
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">  
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />  
        <property name="url" value="jdbc:mysql://localhost:3306/mybatis" />  
        <property name="username" value="mybatis" />  
        <property name="password" value="123abc" />  
    </bean>  
    
    <!--  
        2. mybatis的SqlSession的工厂: SqlSessionFactoryBean dataSource:引用数据源  
  
        MyBatis定义数据源,同意加载配置  
    -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource"></property>  
        <property name="configLocation" value="classpath:config/mybatis-config.xml" />   
    </bean>  
    
        <!--  
        3. mybatis自动扫描加载Sql映射文件/接口 : MapperScannerConfigurer sqlSessionFactory  
  
        basePackage:指定sql映射文件/接口所在的包（自动扫描）  
    -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.zmt.*"></property>  
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- 
        4. 事务管理 : DataSourceTransactionManager dataSource:引用上面定义的数据源 
    -->  
    <bean id="txManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource"></property>  
    </bean>  
  
    <!-- 5. 使用声明式事务  
         transaction-manager：引用上面定义的事务管理器  
     -->  
    <tx:annotation-driven transaction-manager="txManager" />  
</beans>